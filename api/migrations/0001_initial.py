# Generated by Django 3.1.4 on 2020-12-31 20:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_lifecycle.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('wca_id', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('region', models.CharField(blank=True, choices=[('NCR', 'NCR'), ('CAR', 'CAR'), ('01', 'Region I'), ('02', 'Region II'), ('03', 'Region III'), ('4A', 'Region IV-A'), ('4B', 'Region IV-B'), ('05', 'Region V'), ('06', 'Region VI'), ('07', 'Region VII'), ('08', 'Region VIII'), ('09', 'Region IX'), ('10', 'Region X'), ('11', 'Region XI'), ('12', 'Region XII'), ('13', 'Region XIII'), ('BARMM', 'BARMM')], max_length=255, null=True)),
                ('region_updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RegionUpdateRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(choices=[('NCR', 'NCR'), ('CAR', 'CAR'), ('01', 'Region I'), ('02', 'Region II'), ('03', 'Region III'), ('4A', 'Region IV-A'), ('4B', 'Region IV-B'), ('05', 'Region V'), ('06', 'Region VI'), ('07', 'Region VII'), ('08', 'Region VIII'), ('09', 'Region IX'), ('10', 'Region X'), ('11', 'Region XI'), ('12', 'Region XII'), ('13', 'Region XIII'), ('BARMM', 'BARMM')], max_length=64)),
                ('status', models.CharField(choices=[('p', 'Pending'), ('a', 'Approved'), ('d', 'Denied')], default='p', max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_update_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
